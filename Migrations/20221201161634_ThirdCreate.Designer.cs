// <auto-generated />
using System;
using JueriOnlineShop.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JueriOnlineShop.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221201161634_ThirdCreate")]
    partial class ThirdCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JueriOnlineShop.Models.Cantitate", b =>
                {
                    b.Property<int>("idCantitate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCantitate"), 1L, 1);

                    b.Property<int?>("ComandaidComanda")
                        .HasColumnType("int");

                    b.Property<int>("cantitatateTotala")
                        .HasColumnType("int");

                    b.HasKey("idCantitate");

                    b.HasIndex("ComandaidComanda");

                    b.ToTable("CantitateFinala");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Categorie", b =>
                {
                    b.Property<int>("idCategorie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCategorie"), 1L, 1);

                    b.Property<string>("denumire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("produsidProdus")
                        .HasColumnType("int");

                    b.HasKey("idCategorie");

                    b.HasIndex("produsidProdus");

                    b.ToTable("CategorieFinala");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Comanda", b =>
                {
                    b.Property<int>("idComanda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idComanda"), 1L, 1);

                    b.Property<string>("statusComanda")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idComanda");

                    b.ToTable("ComandaFinala");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Cos", b =>
                {
                    b.Property<int>("idCos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCos"), 1L, 1);

                    b.Property<int?>("cantitateidCantitate")
                        .HasColumnType("int");

                    b.HasKey("idCos");

                    b.HasIndex("cantitateidCantitate");

                    b.ToTable("CosFinal");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Produs", b =>
                {
                    b.Property<int>("idProdus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProdus"), 1L, 1);

                    b.Property<int?>("commandaidComanda")
                        .HasColumnType("int");

                    b.Property<string>("descriereProdus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeProdus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pretProdus")
                        .HasColumnType("int");

                    b.Property<int?>("reviewidReview")
                        .HasColumnType("int");

                    b.HasKey("idProdus");

                    b.HasIndex("commandaidComanda");

                    b.HasIndex("reviewidReview");

                    b.ToTable("ProdusFinal");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Review", b =>
                {
                    b.Property<int>("idReview")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idReview"), 1L, 1);

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("detalii")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idReview");

                    b.ToTable("ReviewFinal");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.User", b =>
                {
                    b.Property<int>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUser"), 1L, 1);

                    b.Property<int?>("cosidCos")
                        .HasColumnType("int");

                    b.Property<string>("nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parola")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("produsidProdus")
                        .HasColumnType("int");

                    b.Property<int?>("reviewidReview")
                        .HasColumnType("int");

                    b.HasKey("idUser");

                    b.HasIndex("cosidCos");

                    b.HasIndex("produsidProdus");

                    b.HasIndex("reviewidReview");

                    b.ToTable("UserFinal");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Cantitate", b =>
                {
                    b.HasOne("JueriOnlineShop.Models.Comanda", null)
                        .WithMany("cantitate")
                        .HasForeignKey("ComandaidComanda");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Categorie", b =>
                {
                    b.HasOne("JueriOnlineShop.Models.Produs", "produs")
                        .WithMany("categorii")
                        .HasForeignKey("produsidProdus");

                    b.Navigation("produs");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Cos", b =>
                {
                    b.HasOne("JueriOnlineShop.Models.Cantitate", "cantitate")
                        .WithMany("cosuri")
                        .HasForeignKey("cantitateidCantitate");

                    b.Navigation("cantitate");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Produs", b =>
                {
                    b.HasOne("JueriOnlineShop.Models.Comanda", "commanda")
                        .WithMany("produs")
                        .HasForeignKey("commandaidComanda");

                    b.HasOne("JueriOnlineShop.Models.Review", "review")
                        .WithMany("produse")
                        .HasForeignKey("reviewidReview");

                    b.Navigation("commanda");

                    b.Navigation("review");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.User", b =>
                {
                    b.HasOne("JueriOnlineShop.Models.Cos", "cos")
                        .WithMany("utilizatori")
                        .HasForeignKey("cosidCos");

                    b.HasOne("JueriOnlineShop.Models.Produs", "produs")
                        .WithMany("utilizatori")
                        .HasForeignKey("produsidProdus");

                    b.HasOne("JueriOnlineShop.Models.Review", "review")
                        .WithMany("users")
                        .HasForeignKey("reviewidReview");

                    b.Navigation("cos");

                    b.Navigation("produs");

                    b.Navigation("review");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Cantitate", b =>
                {
                    b.Navigation("cosuri");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Comanda", b =>
                {
                    b.Navigation("cantitate");

                    b.Navigation("produs");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Cos", b =>
                {
                    b.Navigation("utilizatori");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Produs", b =>
                {
                    b.Navigation("categorii");

                    b.Navigation("utilizatori");
                });

            modelBuilder.Entity("JueriOnlineShop.Models.Review", b =>
                {
                    b.Navigation("produse");

                    b.Navigation("users");
                });
#pragma warning restore 612, 618
        }
    }
}
